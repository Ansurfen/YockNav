import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,d as t}from"./app-aad1477e.js";const e={},o=t(`<h2 id="formdata-encode" tabindex="-1"><a class="header-anchor" href="#formdata-encode" aria-hidden="true">#</a> formdata.encode()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param v table&lt;string, string[]&gt;</span>
<span class="token comment">---@return string</span>
<span class="token keyword">function</span> formdata<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><p>encode marshals table to form string, just like json.encode() when use it.</p><ul><li>Example</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token function">print</span><span class="token punctuation">(</span>formdata<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
     username <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;ansurfen&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
     password <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token function">tostring</span><span class="token punctuation">(</span><span class="token number">123456</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="formdata-decode" tabindex="-1"><a class="header-anchor" href="#formdata-decode" aria-hidden="true">#</a> formdata.decode()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param v string</span>
<span class="token comment">---@return urlValues</span>
<span class="token keyword">function</span> formdata<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><p>decode unmarshals string to formdata object.</p><ul><li>Example</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> data <span class="token operator">=</span> formdata<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    username <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;ansurfen&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    password <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;root&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token function">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token function">print</span><span class="token punctuation">(</span>formdata<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token function">print</span><span class="token punctuation">(</span>formdata<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token string">&quot;pwd=a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token function">print</span><span class="token punctuation">(</span>formdata<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14),p=[o];function c(u,l){return a(),s("div",null,p)}const r=n(e,[["render",c],["__file","formdata.html.vue"]]);export{r as default};
