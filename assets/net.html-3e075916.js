import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,d as e}from"./app-0d28c3d4.js";const t={},i=e(`<h2 id="ifconfig-addr" tabindex="-1"><a class="header-anchor" href="#ifconfig-addr" aria-hidden="true">#</a> ifconfig_addr</h2><ul><li>addr string</li></ul><h2 id="ifconfig-flag" tabindex="-1"><a class="header-anchor" href="#ifconfig-flag" aria-hidden="true">#</a> ifconfig_flag</h2><ul><li>string|&quot;up&quot;|&quot;broadcast&quot;|&quot;multicast&quot;|&quot;loopback&quot;</li></ul><h2 id="ifconfig-result" tabindex="-1"><a class="header-anchor" href="#ifconfig-result" aria-hidden="true">#</a> ifconfig_result</h2><ul><li>index integer</li><li>mtu integer</li><li>name string</li><li>hardwareAddr string</li><li>flags ifconfig_flag[]</li><li>addrs ifconfig_addr[]</li></ul><h2 id="ifconfig" tabindex="-1"><a class="header-anchor" href="#ifconfig" aria-hidden="true">#</a> ifconfig()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@return ifconfig_result[]</span>
<span class="token keyword">function</span> <span class="token function">ifconfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><p>ifconfig returns information about net interface.</p><h2 id="lsof-info" tabindex="-1"><a class="header-anchor" href="#lsof-info" aria-hidden="true">#</a> lsof_info</h2><ul><li>pid string</li><li>state string</li><li>proto string</li><li>Local string</li><li>foreign string</li></ul><h2 id="lsof" tabindex="-1"><a class="header-anchor" href="#lsof" aria-hidden="true">#</a> lsof()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param port? integer</span>
<span class="token comment">---@return lsof_info[]|lsof_info</span>
<span class="token keyword">function</span> <span class="token function">lsof</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><p>lsof returns information about port occupancy status according to given port.</p><h2 id="curl-opt" tabindex="-1"><a class="header-anchor" href="#curl-opt" aria-hidden="true">#</a> curl_opt</h2><ul><li>header? table&lt;string, string&gt; # header contains the request header fields either received by the server or to be sent by the client.</li><li>method? string|&quot;GET&quot;|&quot;POST&quot;|&quot;HEAD&quot;|&quot;PUT&quot;|&quot;DELETE&quot;|&quot;CONNECT&quot;|&quot;OPTIONS&quot;|&quot;TRACE&quot;|&quot;PATCH&quot; # method specifies the HTTP method (GET, POST, PUT, etc.)</li><li>data? string # data is the request&#39;s body.</li><li>save? boolean # write body into specified file when set true.</li><li>dir? string # set root directory of file to be saved.</li><li>filename? fun(url: string): string # returns filename that will be saved according to url.</li><li>async? boolean #</li></ul><h2 id="curl" tabindex="-1"><a class="header-anchor" href="#curl" aria-hidden="true">#</a> curl()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param opt curl_opt</span>
<span class="token comment">---@vararg string</span>
<span class="token comment">---@return string, err</span>
<span class="token keyword">function</span> <span class="token function">curl</span><span class="token punctuation">(</span>opt<span class="token punctuation">,</span> <span class="token punctuation">...</span><span class="token punctuation">)</span> <span class="token keyword">end</span>

<span class="token comment">---@vararg string</span>
<span class="token comment">---@return string, err</span>
<span class="token keyword">function</span> <span class="token function">curl</span><span class="token punctuation">(</span><span class="token punctuation">...</span><span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><p>overload 1</p><p>curl receives urls and ranges its to send request one by one, and collects all response.body to contact and return according to double &#39;\\n&#39;.</p><p>overload 2</p><p>curl receives variable string argument and ranges its to send GET request one by one, and collects all response.body to contact and return according to double ‘\\n’.</p><ul><li><p>Option</p><ul><li>opt, <a href="#curl-opt">curl_opt</a></li><li>urls, ...(string)</li></ul></li><li><p>Example</p></li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">-- curl fetches url and saves it into specified path combing dir and filename.</span>
<span class="token comment">-- \`NOTE\`: if save is true, body will not write into return&#39;s string.</span>
<span class="token function">curl</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    save <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>
    dir <span class="token operator">=</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span>
    filename <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">base</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token keyword">end</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;https://www.github.com/ansurfen/yock&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">local</span> data <span class="token operator">=</span> <span class="token function">curl</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
     method <span class="token operator">=</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
     data <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token punctuation">{</span> username <span class="token operator">=</span> <span class="token string">&quot;yock&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
<span class="token function">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token function">curl</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.github.com/ansurfen/yock&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),o=[i];function l(c,u){return s(),a("div",null,o)}const d=n(t,[["render",l],["__file","net.html.vue"]]);export{d as default};
