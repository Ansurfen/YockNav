import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as e,d as s}from"./app-62237bf4.js";const t={},o=s(`<p>option 能够在运行时重设 yock 配置，你可以认为它是一个局部或者临时环境。通常说，大部分设置是有效的。你也能够添加<code>sync</code>字段去同步配置，但是这并不推荐，它可能会破坏全局环境。</p><h2 id="选项" tabindex="-1"><a class="header-anchor" href="#选项" aria-hidden="true">#</a> 选项</h2><ul><li>strict?, boolean, 捕获错误和结束程序，当错误发生。</li><li>sync?, boolean, 同步配置 (yock.yaml)，不推荐。</li></ul><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token function">option</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    strict <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>
    sync <span class="token operator">=</span> <span class="token keyword">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),c=[o];function i(l,r){return a(),e("div",null,c)}const u=n(t,[["render",i],["__file","general.html.vue"]]);export{u as default};
