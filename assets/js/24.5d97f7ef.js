(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{297:function(a,t,v){"use strict";v.r(t);var _=v(14),r=Object(_.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"创建新模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建新模块"}},[a._v("#")]),a._v(" 创建新模块")]),a._v(" "),t("p",[a._v("使用: "),t("code",[a._v("ypm init test")]),a._v(" 创建一个名为test的模块\n参数: "),t("code",[a._v("-d")]),a._v(" 布尔类型，若指定，创建的新模块在当前目录的子目录创建")]),a._v(" "),t("h2",{attrs:{id:"补全代码提示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#补全代码提示"}},[a._v("#")]),a._v(" 补全代码提示")]),a._v(" "),t("p",[a._v("使用: "),t("code",[a._v("ypm tidy")])]),a._v(" "),t("h2",{attrs:{id:"安装模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装模块"}},[a._v("#")]),a._v(" 安装模块")]),a._v(" "),t("p",[a._v("使用: "),t("code",[a._v("ypm install ark")]),a._v(" 安装名为ark的模块\n参数: "),t("code",[a._v("-g")]),a._v(" 布尔类型，若指定，安装的模块挂载在yock的全局目录下，否则安装在当前工作目录下")]),a._v(" "),t("h2",{attrs:{id:"卸载模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#卸载模块"}},[a._v("#")]),a._v(" 卸载模块")]),a._v(" "),t("p",[a._v("使用: "),t("code",[a._v("ypm uninstall ark")]),a._v(" 卸载名为ark的模块\n参数: "),t("code",[a._v("-g")]),a._v(" 布尔类型，若指定，卸载挂载在yock的全局目录下的模块，否则卸载当前工作目录下的模块")]),a._v(" "),t("h2",{attrs:{id:"添加模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加模块"}},[a._v("#")]),a._v(" 添加模块")]),a._v(" "),t("p",[a._v("使用: "),t("code",[a._v("ypm add ark")]),a._v(" 将ark模块添加到当前项目当中")]),a._v(" "),t("h2",{attrs:{id:"删除模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除模块"}},[a._v("#")]),a._v(" 删除模块")]),a._v(" "),t("p",[a._v("使用: "),t("code",[a._v("ypm rm ark")]),a._v(" 将ark模块从当前项目移除")]),a._v(" "),t("h2",{attrs:{id:"缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[a._v("#")]),a._v(" 缓存")]),a._v(" "),t("h4",{attrs:{id:"列出缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列出缓存"}},[a._v("#")]),a._v(" 列出缓存")]),a._v(" "),t("p",[a._v("使用: "),t("code",[a._v("ypm cache ls")]),a._v(" 列出目录中存在的所有缓存信息")]),a._v(" "),t("h4",{attrs:{id:"释放缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#释放缓存"}},[a._v("#")]),a._v(" 释放缓存")]),a._v(" "),t("p",[a._v("使用: "),t("code",[a._v("ypm cache free")]),a._v(" 释放超时的缓存\n参数:\n"),t("code",[a._v("-f")]),a._v(" 布尔类型，将全部低于level（默认为2）的缓存释放，包括没有时间期限的\n"),t("code",[a._v("-l")]),a._v(" 整型，设置level等级")]),a._v(" "),t("h2",{attrs:{id:"代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代理"}},[a._v("#")]),a._v(" 代理")]),a._v(" "),t("p",[a._v("ypm 拉取模块的地址")]),a._v(" "),t("h2",{attrs:{id:"添加代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加代理"}},[a._v("#")]),a._v(" 添加代理")]),a._v(" "),t("p",[a._v("使用: "),t("code",[a._v("ypm proxy add gitlab.lua")]),a._v(" 将代理文件添加到环境当中，并根据其中的信息分配代理标识符")]),a._v(" "),t("h2",{attrs:{id:"删除代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除代理"}},[a._v("#")]),a._v(" 删除代理")]),a._v(" "),t("p",[a._v("使用: "),t("code",[a._v("ypm proxy del github")]),a._v(" 删除名为github的代理")]),a._v(" "),t("h2",{attrs:{id:"创建代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建代理"}},[a._v("#")]),a._v(" 创建代理")]),a._v(" "),t("p",[a._v("使用: "),t("code",[a._v("ypm proxy new gitlab")]),a._v(" 创建名为gitlab的代理，这将会在工作目录生成一个代理文件\n参数:\n"),t("code",[a._v("-a")]),a._v(": 字符类型，设置作者的名称\n"),t("code",[a._v("-l")]),a._v(": 字符类型，设置代理文件的开源协议")]),a._v(" "),t("h2",{attrs:{id:"拉取代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#拉取代理"}},[a._v("#")]),a._v(" 拉取代理")]),a._v(" "),t("p",[a._v("使用: "),t("code",[a._v("ypm proxy get [url]")]),a._v(" 从指定url拉取代理文件，自动挂载")]),a._v(" "),t("h2",{attrs:{id:"打包项目"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#打包项目"}},[a._v("#")]),a._v(" 打包项目")]),a._v(" "),t("p",[a._v("使用: "),t("code",[a._v("ypm build")]),a._v(" 将当前工作目录下的文件及文件夹打包成压缩包的形式，同时根据.yockignore忽略某些文件/文件夹，并将.yockignore的规则添加到.gitignore当中。")])])}),[],!1,null,null,null);t.default=r.exports}}]);