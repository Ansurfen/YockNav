(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{283:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"echo-mode"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#echo-mode"}},[t._v("#")]),t._v(" echo_mode")]),t._v(" "),s("ul",[s("li",[t._v('"c" # create a new file if none exists.')]),t._v(" "),s("li",[t._v('"t" # truncate regular writable file when opened.')]),t._v(" "),s("li",[t._v('"r" # open the file read-only.')]),t._v(" "),s("li",[t._v('"w" # open the file write-only.')]),t._v(" "),s("li",[t._v('"rw" # open the file read-write.')]),t._v(" "),s("li",[t._v('"a" # append data to the file when writing.')]),t._v(" "),s("li",[t._v('"e" # used with '),s("code",[t._v("c")]),t._v(", file must not exist.")]),t._v(" "),s("li",[t._v('"s" # open for synchronous I/O.')])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"echo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#echo"}},[t._v("#")]),t._v(" echo()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@vararg string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@return string[], err")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param opt echo_opt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@vararg string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@return string[], err")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("opt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("Option")]),t._v(" "),s("ul",[s("li",[t._v("mode, "),s("a",{attrs:{href:"#echo-mode"}},[t._v("echo_mode")]),t._v(" (string), indicates how files are opened")]),t._v(" "),s("li",[t._v("fd, string[], fd is short for file descriptor, which used for indicating where stream outputs. You can use filename as fd to write file, or print terminal by stdout, stderr.")])])]),t._v(" "),s("li",[s("p",[t._v("Introduce")])])]),t._v(" "),s("p",[t._v("echo prints variable string argument on terminal andreturns an array that saves every result of print.Except primitive string, you also print environment variablecorresponding value.")]),t._v(" "),s("ul",[s("li",[t._v("Example")])]),t._v(" "),s("p",[t._v("overload 1:")]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"World"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yassert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("local")]),t._v(" data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$Path"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v("data "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("then")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Path: "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('-- effect like environ("Path")')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("p",[t._v("overload 2:")]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- append write")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" fd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stdout"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test.txt"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c|a|rw"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- truncate write")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("echo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" fd "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stdout"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test.txt"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c|t|rw"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"whoami"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#whoami"}},[t._v("#")]),t._v(" whoami()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@return string, err")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("whoami")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Introduce")])]),t._v(" "),s("p",[t._v("whoami returns hostname")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"clear"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#clear"}},[t._v("#")]),t._v(" clear()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Introduce")])]),t._v(" "),s("p",[t._v("clear clears outputs on terminal.")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"cd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cd"}},[t._v("#")]),t._v(" cd()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param dir string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@return err")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Introduce")])]),t._v(" "),s("p",[t._v("cd changes the current working directory to the named directory.")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"touch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#touch"}},[t._v("#")]),t._v(" touch()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param file string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@return err")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Introduce")])]),t._v(" "),s("p",[t._v("touch creates an empty file when file isn't exist.")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"cat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cat"}},[t._v("#")]),t._v(" cat()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param file string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@return string, err")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Introduce")])]),t._v(" "),s("p",[t._v("cat reads content from specified file.")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"ls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ls"}},[t._v("#")]),t._v(" ls()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param dir string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@return string[][], err")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Introduce")])]),t._v(" "),s("p",[t._v("ls lists the information of directory or file according to specified directory.")]),t._v(" "),s("p",[s("code",[t._v("NOTE")]),t._v(": results to be returned by ls isn't like other gun command. In order to save memory, it's set array format to store information. You can see detail in the following.")]),t._v(" "),s("ul",[s("li",[t._v("Format of info")])]),t._v(" "),s("p",[t._v("[1] permission, string, e.g. -rwxrwxrwx, -rw-rw-rw-")]),t._v(" "),s("p",[t._v("[2] size, number")]),t._v(" "),s("p",[t._v("[3] mod_time, string, e.g. Aug  6 15:26")]),t._v(" "),s("p",[t._v("[4] filename, string")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"chmod"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chmod"}},[t._v("#")]),t._v(" chmod()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param name string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param mode number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@return err")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chmod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Introduce")])]),t._v(" "),s("p",[t._v("chmod changes the mode of the named file to mode. If the file is a symbolic link, it changes the mode of the link's target.")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"chown"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chown"}},[t._v("#")]),t._v(" chown()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param name string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param uid number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param gid number")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@return err")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" uid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" gid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Introduce")])]),t._v(" "),s("p",[t._v("chown changes the numeric uid and gid of the named file. If the file is a symbolic link, it changes the uid and gid of the link's target. A uid or gid of -1 means to not change that value.")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"mkdir"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mkdir"}},[t._v("#")]),t._v(" mkdir()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@vararg string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@return err")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Introduce")])]),t._v(" "),s("p",[t._v("mkdir recurses to create directory.")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"cp-opt"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cp-opt"}},[t._v("#")]),t._v(" cp_opt")]),t._v(" "),s("ul",[s("li",[t._v("recurse?, boolean (default false), recurses to copy specified file or directory")]),t._v(" "),s("li",[t._v("force?, boolean (default false), covers file with the same name when set true")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"cp"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cp"}},[t._v("#")]),t._v(" cp()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param src string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param dst string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param opt cp_opt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param path table<string, string>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("opt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Introduce")])]),t._v(" "),s("p",[t._v("cp copies file or directory from src to dst")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Option")]),t._v(" "),s("ul",[s("li",[t._v("recurse?, boolean (default false), recurses to copy specified file or directory")]),t._v(" "),s("li",[t._v("force?, boolean (default false), covers file with the same name when set true")])])]),t._v(" "),s("li",[s("p",[t._v("Example")])])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--`NOTE`: It isn't support recurse, and see other overload")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--when you want to do it.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" recurse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"mv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mv"}},[t._v("#")]),t._v(" mv()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param src string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param dst string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("src"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Introduce")])]),t._v(" "),s("p",[t._v("mv moves directory or file from src to dst, supporting recurse")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"pwd"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pwd"}},[t._v("#")]),t._v(" pwd()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@return string, err")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pwd")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Introduce")])]),t._v(" "),s("p",[t._v("pwd returns working directory for current program")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"rm-opt"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rm-opt"}},[t._v("#")]),t._v(" rm_opt")]),t._v(" "),s("ul",[s("li",[t._v("safe? boolean # is the same with recurse field. Please use recurse instead of it, and it'll be deprecated in the future.")]),t._v(" "),s("li",[t._v("pattern? string # remove directory or file to be matched if pattern's length is more than 0, and obeys golang's regular expressions.")]),t._v(" "),s("li",[t._v("recurse? boolean # recurses to remove directory when set true")])]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"rm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rm"}},[t._v("#")]),t._v(" rm()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--- overload 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param opt rm_opt")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@vararg string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@return err")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("opt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--- overload 2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@vararg string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@return err")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Introduce")])]),t._v(" "),s("p",[t._v("overload 1:")]),t._v(" "),s("p",[t._v("rm removes specified directories or files, and has one function overload of which capacity just like rmdir command on bash.")]),t._v(" "),s("p",[t._v("overload 2:")]),t._v(" "),s("p",[t._v("rm removes empty directories or single files to be specified, and just like rmdir command on bash. If you want to remove directory with recurse, see its function overload.")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Option")]),t._v(" "),s("ul",[s("li",[t._v("recurse?, boolean (default false), recurses to remove directory when set true")]),t._v(" "),s("li",[t._v("pattern?, string, remove directory or file to be matched if pattern's length is more than 0, and obeys golang's regular expressions.")]),t._v(" "),s("li",[t._v("safe?, boolean (default false), is the same with recurse field. Please use recurse instead of it, and it'll be deprecated in the future.")])])]),t._v(" "),s("li",[s("p",[t._v("Example")])])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" just like rmdir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" which only removes empty directory "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" single files\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" delete file with recuse\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" recurse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/b"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" remove with recurse "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" pattern\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" recurse "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pattern "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".exe$"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/a"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("hr"),t._v(" "),s("h3",{attrs:{id:"rename"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rename"}},[t._v("#")]),t._v(" rename()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param old string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param new string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rename")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("old"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Introduce")])]),t._v(" "),s("p",[t._v("rename resets filename from old to new")]),t._v(" "),s("hr"),t._v(" "),s("h3",{attrs:{id:"sudo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sudo"}},[t._v("#")]),t._v(" sudo()")]),t._v(" "),s("ul",[s("li",[t._v("Prototype")])]),t._v(" "),s("div",{staticClass:"language-lua extra-class"},[s("pre",{pre:!0,attrs:{class:"language-lua"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param cmd string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cmd"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("ul",[s("li",[t._v("Introduce")])]),t._v(" "),s("p",[t._v("sudo runs command with administrator permission")])])}),[],!1,null,null,null);s.default=n.exports}}]);