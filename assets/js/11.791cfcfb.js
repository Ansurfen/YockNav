(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{285:function(t,e,a){"use strict";a.r(e);var s=a(14),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[e("a",{attrs:{href:"https://github.com/Ansurfen/yock",target:"_blank",rel:"noopener noreferrer"}},[t._v("Yock"),e("OutboundLink")],1),t._v("is a framework built for building, somewhat similar to nodejs and bazel, with some functionality encapsulated under the basement based on an interpreter. Just like NodeJS, Yock has implemented its own package management tool, YPM, based on wrapped Lua, which means that it is possible to introduce third-party libraries.")]),t._v(" "),e("p",[e("a",{attrs:{href:"#Install"}},[t._v("Install")]),t._v(" "),e("a",{attrs:{href:"#GetStarted"}},[t._v("Get Started")])]),t._v(" "),e("h2",{attrs:{id:"install"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),e("p",[e("code",[t._v("NOTE")]),t._v(": Regardless of the installation method, you need to mount yock to the local environment after downloading. After extracting the package, go to the directory of the executable and run "),e("code",[t._v("yock run install.lua")]),t._v(" to complete the process.")]),t._v(" "),e("h3",{attrs:{id:"git-release-recommended-the-latest-version-is-released-as-soon-as-possible"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-release-recommended-the-latest-version-is-released-as-soon-as-possible"}},[t._v("#")]),t._v(" Git Release (Recommended, the latest version is released as soon as possible)")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/Ansurfen/yock/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("github"),e("OutboundLink")],1),t._v(": Select the appropriate compressed package, download it, decompress it and run the install.lua.")]),t._v(" "),e("h3",{attrs:{id:"package-management-tool-lag-in-version-update"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#package-management-tool-lag-in-version-update"}},[t._v("#")]),t._v(" Package Management Tool (Lag in Version Update)")]),t._v(" "),e("p",[t._v("Package management tools are generally automatically decompressed after downloading, and you still need to manually run the install.lua after decompression, so it is highly recommended to use the form of "),e("code",[t._v("Git Release")]),t._v(".\nnpm: npm i @ansurfen/yock -g\npip: pip install yock")]),t._v(" "),e("h3",{attrs:{id:"build-by-hand"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#build-by-hand"}},[t._v("#")]),t._v(" Build by hand")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/Ansurfen/yock.git\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ctl\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("-- windows --"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n./build.bat ffi //build with libffi\n./build.bat dev //build developer version\n./build.bat oslinux//cross compile to linux\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("-- other platform --"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\ngo run "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" run "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/auto/build.lua all -- --all-os linux\n")])])]),e("h2",{attrs:{id:"getstarted"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getstarted"}},[t._v("#")]),t._v(" GetStarted")]),t._v(" "),e("p",[t._v("If you use VSCode as your development environment, you can install the plugin for Lua code hints for a better experience.\n"),e("img",{attrs:{src:"https://github.com/Ansurfen/ansurfen.github.io/blob/main/images/yock/lua-tip.png?raw=true",alt:"lua-tip"}})]),t._v(" "),e("p",[t._v("When "),e("code",[t._v("yock run install.lua")]),t._v(" is executed successfully, you can create a working directory to write and test yock scripts. Run "),e("code",[t._v("ypm tidy")]),t._v(" (ypm.sh for operating systems other than Windows) to complete the code definition, and it will create an include directory in the working directory with source files for plugin prompts only.")]),t._v(" "),e("h3",{attrs:{id:"hello-world"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hello-world"}},[t._v("#")]),t._v(" Hello, World!")]),t._v(" "),e("div",{staticClass:"language-lua extra-class"},[e("pre",{pre:!0,attrs:{class:"language-lua"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- main.lua")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfmt"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Printf")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello %s!\\n"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Yock"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Create a main.lua file and write down the above. Use "),e("code",[t._v("yock run main.lua")]),t._v(" execution. If all goes well, you'll see the output in the terminal. At this point, Yock's development environment is configured. The next chapter begins with an introduction to the specific use of yock.")])])}),[],!1,null,null,null);e.default=n.exports}}]);