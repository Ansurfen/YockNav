(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{282:function(t,n,s){"use strict";s.r(n);var a=s(14),e=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"ffi-library"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ffi-library"}},[t._v("#")]),t._v(" ffi.library()")]),t._v(" "),n("ul",[n("li",[t._v("Prototype")])]),t._v(" "),n("div",{staticClass:"language-lua extra-class"},[n("pre",{pre:!0,attrs:{class:"language-lua"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param lib string")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("---@param funcs table")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" ffi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("library")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lib"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" funcs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),n("ul",[n("li",[n("p",[t._v("Introduce\nlibrary declares function prototype (arguments +return value type) and creates its at running.Then, you can call its as function throughffi.lib.'lib_name'.'function_name' format.")])]),t._v(" "),n("li",[n("p",[t._v("Type corresponding\nLua      | C")])])]),t._v(" "),n("hr"),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("     |void\n")])])]),n("p",[t._v("integer  |uint8\ninteger  |int8\ninteger  |uint16\ninteger  |int16\ninteger  |uint32\ninteger  |int32\ninteger  |uint64\ninteger  |int64\ninteger  |int (int32)\ninteger  |long (int64)\nnumber   |float\nnumber   |double\nboolean  |bool\nstring   |str (ptr type alias)\nuserdata |ptr # pointer type")]),t._v(" "),n("ul",[n("li",[t._v("Example:")])]),t._v(" "),n("div",{staticClass:"language-lua extra-class"},[n("pre",{pre:!0,attrs:{class:"language-lua"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" declares "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" prototype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" it"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s worth noting filename extension isn'")]),t._v("t required"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" yock will refer extension's name to add it automatically\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" according to "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("platform")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("windows"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dll"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" linux"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("so"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" darwin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dylib"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" Of course"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obvious to add it is allowed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" but "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" recommended because it's considered\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" difficult to cross platform"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nffi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("library")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"./lib/mylib"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     hello "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"void"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"str"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" calls "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" no matter how tortuous the library path is"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" yock only extracts filename\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("#")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v(" of path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" meanwhile to split filename "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("extension")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dll"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("so"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dylib"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" to ensure cross platform"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nffi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lib"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mylib"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("hello")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"yock"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);