import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,d as t}from"./app-62237bf4.js";const e={},i=t(`<h2 id="ifconfig-addr" tabindex="-1"><a class="header-anchor" href="#ifconfig-addr" aria-hidden="true">#</a> ifconfig_addr</h2><ul><li>addr string</li></ul><h2 id="ifconfig-flag" tabindex="-1"><a class="header-anchor" href="#ifconfig-flag" aria-hidden="true">#</a> ifconfig_flag</h2><ul><li>string|&quot;up&quot;|&quot;broadcast&quot;|&quot;multicast&quot;|&quot;loopback&quot;</li></ul><h2 id="ifconfig-result" tabindex="-1"><a class="header-anchor" href="#ifconfig-result" aria-hidden="true">#</a> ifconfig_result</h2><ul><li>index integer</li><li>mtu integer</li><li>name string</li><li>hardwareAddr string</li><li>flags ifconfig_flag[]</li><li>addrs ifconfig_addr[]</li></ul><h2 id="ifconfig" tabindex="-1"><a class="header-anchor" href="#ifconfig" aria-hidden="true">#</a> ifconfig()</h2><ul><li>原型</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@return ifconfig_result[]</span>
<span class="token keyword">function</span> <span class="token function">ifconfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>介绍</li></ul><p>ifconfig 返回网络接口的信息。</p><h2 id="lsof-info" tabindex="-1"><a class="header-anchor" href="#lsof-info" aria-hidden="true">#</a> lsof_info</h2><ul><li>pid string</li><li>state string</li><li>proto string</li><li>Local string</li><li>foreign string</li></ul><h2 id="lsof" tabindex="-1"><a class="header-anchor" href="#lsof" aria-hidden="true">#</a> lsof()</h2><ul><li>原型</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param port? integer</span>
<span class="token comment">---@return lsof_info[]|lsof_info</span>
<span class="token keyword">function</span> <span class="token function">lsof</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>介绍</li></ul><p>lsof 返回给定端口的占用情况。</p><h2 id="curl-opt" tabindex="-1"><a class="header-anchor" href="#curl-opt" aria-hidden="true">#</a> curl_opt</h2><ul><li>header? table&lt;string, string&gt; # header包含请求头字段，要么作为服务器的接收，要么作为客户端的发送。</li><li>method? string|&quot;GET&quot;|&quot;POST&quot;|&quot;HEAD&quot;|&quot;PUT&quot;|&quot;DELETE&quot;|&quot;CONNECT&quot;|&quot;OPTIONS&quot;|&quot;TRACE&quot;|&quot;PATCH&quot; # method 指明 HTTP 请求的方法 (GET, POST, PUT, etc.)</li><li>data? string # data 是请求的 body 部分。</li><li>save? boolean # 当设置 true，写入 body 到指定文件。</li><li>dir? string # 设置保存文件的根目录。</li><li>filename? fun(url: string): string # 根据 url 返回将保存的文件名。</li><li>async? boolean #</li></ul><h2 id="curl" tabindex="-1"><a class="header-anchor" href="#curl" aria-hidden="true">#</a> curl()</h2><ul><li>原型</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param opt curl_opt</span>
<span class="token comment">---@vararg string</span>
<span class="token comment">---@return string, err</span>
<span class="token keyword">function</span> <span class="token function">curl</span><span class="token punctuation">(</span>opt<span class="token punctuation">,</span> <span class="token punctuation">...</span><span class="token punctuation">)</span> <span class="token keyword">end</span>

<span class="token comment">---@vararg string</span>
<span class="token comment">---@return string, err</span>
<span class="token keyword">function</span> <span class="token function">curl</span><span class="token punctuation">(</span><span class="token punctuation">...</span><span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>介绍</li></ul><p>重载 1</p><p>curl 接收 urls 和遍历他们逐一发送请求，并收集所有响应体，通过双&#39;\\n&#39;连接后返回。</p><p>重载 2</p><p>curl 接收可变字符串变量和遍历他们发送 GET 请求，并收集所有响应体，通过双&#39;\\n&#39;连接后返回。</p><ul><li><p>选项</p><ul><li>opt, <a href="#curl-opt">curl_opt</a></li><li>urls, ...(string)</li></ul></li><li><p>示例</p></li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">-- curl 抓取 url 和保存它到基于目录和文件名连接的path。</span>
<span class="token comment">-- \`注意\`: 如果 save 为 true，响应的数据只会写入文件，而不会作为字符串返回。</span>
<span class="token function">curl</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    save <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>
    dir <span class="token operator">=</span> <span class="token string">&quot;./&quot;</span><span class="token punctuation">,</span>
    filename <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
        <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">base</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
    <span class="token keyword">end</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;https://www.github.com/ansurfen/yock&quot;</span><span class="token punctuation">)</span>

<span class="token keyword">local</span> data <span class="token operator">=</span> <span class="token function">curl</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
     method <span class="token operator">=</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
     data <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token punctuation">{</span> username <span class="token operator">=</span> <span class="token string">&quot;yock&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
<span class="token function">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token function">curl</span><span class="token punctuation">(</span><span class="token string">&quot;https://www.github.com/ansurfen/yock&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),l=[i];function o(c,u){return a(),s("div",null,l)}const d=n(e,[["render",o],["__file","net.html.vue"]]);export{d as default};
