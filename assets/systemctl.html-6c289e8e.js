import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as a,d as e}from"./app-0d28c3d4.js";const t={},l=e(`<div class="hint-container danger"><p class="hint-container-title">警告</p><p>Yet not finished, please not use.</p></div><h2 id="systemctl-opt" tabindex="-1"><a class="header-anchor" href="#systemctl-opt" aria-hidden="true">#</a> systemctl_opt</h2><h2 id="sys-state" tabindex="-1"><a class="header-anchor" href="#sys-state" aria-hidden="true">#</a> sys_state</h2><ul><li>string</li><li>&quot;all&quot;</li><li>&quot;active&quot;</li><li>&quot;inactive&quot;</li></ul><h2 id="sys-type" tabindex="-1"><a class="header-anchor" href="#sys-type" aria-hidden="true">#</a> sys_type</h2><ul><li>string</li><li>&quot;target&quot;</li><li>&quot;service&quot;</li></ul><h2 id="systemctl-list" tabindex="-1"><a class="header-anchor" href="#systemctl-list" aria-hidden="true">#</a> systemctl.list()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param t? sys_type</span>
<span class="token comment">---@param s? sys_state</span>
<span class="token comment">---@return sys_service[]</span>
<span class="token keyword">function</span> systemctl<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span> s<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><h2 id="systemctl-restart" tabindex="-1"><a class="header-anchor" href="#systemctl-restart" aria-hidden="true">#</a> systemctl.restart()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param name string</span>
<span class="token comment">---@return err</span>
<span class="token keyword">function</span> systemctl<span class="token punctuation">.</span><span class="token function">restart</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><h2 id="systemctl-start" tabindex="-1"><a class="header-anchor" href="#systemctl-start" aria-hidden="true">#</a> systemctl.start()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param name string</span>
<span class="token comment">---@return err</span>
<span class="token keyword">function</span> systemctl<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><h2 id="systemctl-stop" tabindex="-1"><a class="header-anchor" href="#systemctl-stop" aria-hidden="true">#</a> systemctl.stop()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param name string</span>
<span class="token comment">---@return err</span>
<span class="token keyword">function</span> systemctl<span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><h2 id="systemctl-delete" tabindex="-1"><a class="header-anchor" href="#systemctl-delete" aria-hidden="true">#</a> systemctl.delete()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param name string</span>
<span class="token comment">---@return err</span>
<span class="token keyword">function</span> systemctl<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><h2 id="systemctl-disable" tabindex="-1"><a class="header-anchor" href="#systemctl-disable" aria-hidden="true">#</a> systemctl.disable()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param name string</span>
<span class="token comment">---@return err</span>
<span class="token keyword">function</span> systemctl<span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><h2 id="systemctl-enable" tabindex="-1"><a class="header-anchor" href="#systemctl-enable" aria-hidden="true">#</a> systemctl.enable()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param name string</span>
<span class="token comment">---@return err</span>
<span class="token keyword">function</span> systemctl<span class="token punctuation">.</span><span class="token function">enable</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><h2 id="sc-create-opt" tabindex="-1"><a class="header-anchor" href="#sc-create-opt" aria-hidden="true">#</a> sc_create_opt</h2><ul><li>description? string</li><li>before? string</li><li>after? string</li><li>type? &quot;simple&quot;|&quot;exec&quot;|&quot;forking&quot;|&quot;oneshot&quot;|&quot;dbus&quot;|&quot;notify&quot;|&quot;idle&quot;</li><li>execStart? string</li><li>execStop? string</li><li>privateTmp? boolean</li><li>restartSec? integer</li><li>restart? string</li><li>wantedBy string</li><li>unit? sc_create_opt_unit</li><li>service? sc_create_opt_service</li><li>install? sc_create_opt_install</li><li>spec? sc_create_opt_spec</li></ul><h2 id="systemctl-create" tabindex="-1"><a class="header-anchor" href="#systemctl-create" aria-hidden="true">#</a> systemctl.create()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param name string</span>
<span class="token comment">---@param opt sc_create_opt</span>
<span class="token comment">---@return err</span>
<span class="token keyword">function</span> systemctl<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> opt<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><h2 id="service-status" tabindex="-1"><a class="header-anchor" href="#service-status" aria-hidden="true">#</a> service_status</h2><ul><li>integer</li><li>&quot;running&quot;</li><li>&quot;stopped&quot;</li><li>&quot;unknown&quot;</li></ul><h2 id="sys-service" tabindex="-1"><a class="header-anchor" href="#sys-service" aria-hidden="true">#</a> sys_service</h2><ul><li>pid integer</li><li>name string</li><li>status service_status</li></ul><h2 id="systemctl-status" tabindex="-1"><a class="header-anchor" href="#systemctl-status" aria-hidden="true">#</a> systemctl.status()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param name string</span>
<span class="token comment">---@return sys_service, err</span>
<span class="token keyword">function</span> systemctl<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul>`,48),i=[l];function c(r,o){return n(),a("div",null,i)}const p=s(t,[["render",c],["__file","systemctl.html.vue"]]);export{p as default};
