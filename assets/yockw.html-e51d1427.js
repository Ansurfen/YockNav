import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,d as e}from"./app-62237bf4.js";const o={},t=e(`<p>Yockw 声明yock监控的配置，主要用于设置普罗米修斯指标，日志查询。</p><h2 id="自启动" tabindex="-1"><a class="header-anchor" href="#自启动" aria-hidden="true">#</a> 自启动</h2><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token function">option</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    yockw <span class="token operator">=</span> <span class="token punctuation">{</span>
        self_boot <span class="token operator">=</span> <span class="token keyword">true</span><span class="token punctuation">,</span>
        port <span class="token operator">=</span> <span class="token number">9090</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当<code>self_boot</code>设置为true并指定<code>port</code>字段，在你运行yock脚本的时候，yock将会在后台自启动监控。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>每次自启动的过程都会检测指定端口上是否已经启动了监控进程。若已存在，则不会重复启动。当然，你也可以改变<code>port</code>的值去启动不同的监控进程，这是不推荐的，yock脚本运行的时候目前只支持和一个yockw通信。</p></div>`,5),c=[t];function p(i,l){return s(),a("div",null,c)}const u=n(o,[["render",p],["__file","yockw.html.vue"]]);export{u as default};
