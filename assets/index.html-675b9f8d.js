import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as o,e as a,f as n,b as t,d as i}from"./app-62237bf4.js";const l={},u=a("p",null,"go-faker binding for yock, and built-in captcha and random avatars functions for mock service.",-1),r={href:"https://github.com/Ansurfen/yock-faker",target:"_blank",rel:"noopener noreferrer"},k={href:"https://gitee.com/ansurfen/yock-faker",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/Ansurfen/yock-faker/releases",target:"_blank",rel:"noopener noreferrer"},m=i(`<h2 id="install" tabindex="-1"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ypm <span class="token function">install</span> github.tag/ansurfen/yock-faker@1.0.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="get-started" tabindex="-1"><a class="header-anchor" href="#get-started" aria-hidden="true">#</a> Get started</h2><h3 id="faker-data" tabindex="-1"><a class="header-anchor" href="#faker-data" aria-hidden="true">#</a> Faker data</h3><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token function">print</span><span class="token punctuation">(</span>fake<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fake<span class="token punctuation">.</span><span class="token function">email</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="mock-with-captcha-and-random-avatars" tabindex="-1"><a class="header-anchor" href="#mock-with-captcha-and-random-avatars" aria-hidden="true">#</a> Mock with captcha and random avatars</h3><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">local</span> port <span class="token operator">=</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token string">&quot;yock-faker@1.0.0&quot;</span><span class="token punctuation">)</span>
<span class="token comment">---@type faker</span>
<span class="token keyword">local</span> fake <span class="token operator">=</span> <span class="token function">import</span><span class="token punctuation">(</span><span class="token string">&quot;./index&quot;</span><span class="token punctuation">)</span>
fake<span class="token punctuation">.</span><span class="token function">set_port</span><span class="token punctuation">(</span>port<span class="token punctuation">)</span>

<span class="token keyword">local</span> m <span class="token operator">=</span> mock<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">-- writes a random avatar into response according to name</span>
m<span class="token punctuation">:</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/avatar/:name&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
    <span class="token keyword">local</span> name <span class="token operator">=</span> ctx<span class="token punctuation">:</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span>
    fake<span class="token punctuation">.</span>avatar<span class="token punctuation">.</span><span class="token function">govatar</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> name<span class="token punctuation">)</span>
<span class="token keyword">end</span><span class="token punctuation">)</span>

<span class="token comment">-- writes captcha into response according to captcha&#39;s id</span>
m<span class="token punctuation">:</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/captcha/get/:id&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
    <span class="token keyword">local</span> id <span class="token operator">=</span> ctx<span class="token punctuation">:</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span>
    fake<span class="token punctuation">.</span>captcha<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> id<span class="token punctuation">)</span>
<span class="token keyword">end</span><span class="token punctuation">)</span>

<span class="token comment">-- returns a captcha&#39;s id</span>
m<span class="token punctuation">:</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/captcha/new&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
    <span class="token keyword">local</span> id <span class="token operator">=</span> fake<span class="token punctuation">.</span>captcha<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    ctx<span class="token punctuation">:</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span>
<span class="token keyword">end</span><span class="token punctuation">)</span>

<span class="token comment">-- lists all avaiable captcha&#39;s id</span>
m<span class="token punctuation">:</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;/captcha/ls&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
    ctx<span class="token punctuation">:</span><span class="token function">String</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> json<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>fake<span class="token punctuation">.</span>captcha<span class="token punctuation">.</span><span class="token function">ls</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">end</span><span class="token punctuation">)</span>

m<span class="token punctuation">:</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token number">8080</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function v(f,h){const s=p("ExternalLinkIcon");return c(),o("div",null,[u,a("ul",null,[a("li",null,[n("repository, "),a("a",r,[n("github"),t(s)]),n(", "),a("a",k,[n("gitee"),t(s)]),n(", gitlab, gitea")]),a("li",null,[n("version, found in "),a("a",d,[n("here"),t(s)])])]),m])}const _=e(l,[["render",v],["__file","index.html.vue"]]);export{_ as default};
