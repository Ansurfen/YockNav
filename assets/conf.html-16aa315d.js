import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as e,d as s}from"./app-0d28c3d4.js";const i={},t=s(`<p>conf can open and parse configuration with easy and fast way, supporting yaml, yml, json, toml, hcl, tfvars, ini, properties, props, prop, dotenv, env file format.</p><h2 id="conf-create" tabindex="-1"><a class="header-anchor" href="#conf-create" aria-hidden="true">#</a> conf.create()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param file string</span>
<span class="token comment">---@param tmpl string</span>
<span class="token comment">---@return conf</span>
<span class="token keyword">function</span> conf<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> tmpl<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><p>create returns parsed conf object, and creates a new file and panics when file isn&#39;t exist.</p><h2 id="conf-open" tabindex="-1"><a class="header-anchor" href="#conf-open" aria-hidden="true">#</a> conf.open()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param file string</span>
<span class="token comment">---@return conf</span>
<span class="token keyword">function</span> conf<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><p>open must open specified file, otherwise it would panic.</p><h2 id="conf-read" tabindex="-1"><a class="header-anchor" href="#conf-read" aria-hidden="true">#</a> conf:read()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param k string</span>
<span class="token comment">---@return table|nil</span>
<span class="token keyword">function</span> conf<span class="token punctuation">:</span><span class="token function">read</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><p>read returns value by json path</p><h2 id="conf-write" tabindex="-1"><a class="header-anchor" href="#conf-write" aria-hidden="true">#</a> conf:write()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token comment">---@param k string</span>
<span class="token comment">---@param v any</span>
<span class="token keyword">function</span> conf<span class="token punctuation">:</span><span class="token function">write</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><p>writes v to specified k, and required to call the save function for persisting on configuration file.</p><h2 id="conf-save" tabindex="-1"><a class="header-anchor" href="#conf-save" aria-hidden="true">#</a> conf:save()</h2><ul><li>Prototype</li></ul><div class="language-lua line-numbers-mode" data-ext="lua"><pre class="language-lua"><code><span class="token keyword">function</span> conf<span class="token punctuation">:</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>Introduce</li></ul><p>save persists data based-on memory into configuration.</p>`,26),o=[t];function l(c,p){return a(),e("div",null,o)}const u=n(i,[["render",l],["__file","conf.html.vue"]]);export{u as default};
